// Mocks generated by Mockito 5.4.6 from annotations
// in pic_pulse/test/blocs/photo_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pic_pulse/models/api_response.dart' as _i2;
import 'package:pic_pulse/models/photo.dart' as _i5;
import 'package:pic_pulse/services/photo_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PhotoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoService extends _i1.Mock implements _i3.PhotoService {
  MockPhotoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResponse<List<_i5.Photo>>> getPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#getPhotos, []),
            returnValue: _i4.Future<_i2.ApiResponse<List<_i5.Photo>>>.value(
              _FakeApiResponse_0<List<_i5.Photo>>(
                this,
                Invocation.method(#getPhotos, []),
              ),
            ),
          )
          as _i4.Future<_i2.ApiResponse<List<_i5.Photo>>>);

  @override
  _i4.Future<_i2.ApiResponse<List<_i5.Photo>>> searchPhotos(String? keyword) =>
      (super.noSuchMethod(
            Invocation.method(#searchPhotos, [keyword]),
            returnValue: _i4.Future<_i2.ApiResponse<List<_i5.Photo>>>.value(
              _FakeApiResponse_0<List<_i5.Photo>>(
                this,
                Invocation.method(#searchPhotos, [keyword]),
              ),
            ),
          )
          as _i4.Future<_i2.ApiResponse<List<_i5.Photo>>>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
